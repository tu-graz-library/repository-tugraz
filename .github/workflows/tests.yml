# -*- coding: utf-8 -*-
#
# Copyright (C) 2025 Graz University of Technology.
#
# repository-tugraz is free software; you can redistribute it and/or modify it
# under the terms of the MIT License; see LICENSE file for more details.


name: E2E Tests

on:
  push:
    branches: main
  pull_request:
    branches: main
  # Run weekly on Sundays at 2 AM UTC
  schedule:
    - cron: "0 2 * * 0"
  workflow_dispatch:
    inputs:
      reason:
        description: "Reason"
        required: false
        default: "Manual trigger"

env:
  DOCKER_IMAGE_NAME: qa
  BASE_URL: https://127.0.0.1:443
  HEADLESS: true

jobs:
  e2e-tests:
    runs-on: ubuntu-latest

    # Add more resources for running multiple containers
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build -t ${{ env.DOCKER_IMAGE_NAME }} .
          echo "Docker image built successfully: ${{ env.DOCKER_IMAGE_NAME }}"

      - name: Build qa-frontend
        working-directory: docker/nginx
        run: |
          docker build -t qa-frontend .
          echo "Docker image built successfully: qa-frontend"

      - name: Start services with Docker Compose
        run: |
          # Replace image name in docker-compose file if needed
          export DOCKER_IMAGE_NAME=${{ env.DOCKER_IMAGE_NAME }}

          # Start all services
          docker compose -f docker-compose.full.yml up -d

          echo "Services started..."

      - name: Show running containers
        run: |
          echo "Currently running containers:"
          docker compose -f docker-compose.full.yml ps

      - name: init
        run: |
          docker exec qa-web-ui-1 invenio db create
          docker exec qa-web-ui-1 invenio index init
          docker exec qa-web-ui-1 invenio rdm rebuild-all-indices
          docker exec qa-web-ui-1 invenio rdm-records demo

      - name: Setup playwright
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Install dependencies
        working-directory: e2e
        run: |
          npm install

      - name: Install playwright browsers
        working-directory: e2e
        run: |
          npx playwright install --with-deps

      - name: Run tests and always pass the step
        working-directory: e2e
        env:
          # Add any environment variables your tests might need
          BASE_URL: ${{ env.BASE_URL }}
        run: |
          npx playwright test

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: e2e/playwright-report/
          retention-days: 14


      # - name: Show container logs on failure
      #   if: failure()
      #   run: |
      #     echo "=== Application Logs ==="
      #     docker-compose -f docker-compose.full.yml -p ${{ env.COMPOSE_PROJECT_NAME }} logs app
      #     echo "=== PostgreSQL Logs ==="
      #     docker-compose -f docker-compose.full.yml -p ${{ env.COMPOSE_PROJECT_NAME }} logs postgres
      #     echo "=== Redis Logs ==="
      #     docker-compose -f docker-compose.full.yml -p ${{ env.COMPOSE_PROJECT_NAME }} logs redis
      #     echo "=== RabbitMQ Logs ==="
      #     docker-compose -f docker-compose.full.yml -p ${{ env.COMPOSE_PROJECT_NAME }} logs rabbitmq
      #     echo "=== OpenSearch Logs ==="
      #     docker-compose -f docker-compose.full.yml -p ${{ env.COMPOSE_PROJECT_NAME }} logs opensearch

      # - name: Cleanup
      #   if: always()
      #   run: |
      #     echo "Cleaning up containers and networks..."
      #     docker-compose -f docker-compose.full.yml -p ${{ env.COMPOSE_PROJECT_NAME }} down -v --remove-orphans
      #     docker rmi ${{ env.DOCKER_IMAGE_NAME }} || true
      #     docker system prune -f